version: "3.8"

services:

  backend:
    build:
      context: ./backend
    volumes:
      - ./data/static:/static                # ← genera aquí collectstatic
      - ./data/backend_state:/opt/state
    env_file: ./backend/.env
    networks: [internal_network]
    restart: unless-stopped
    depends_on:
      - timescaledb
    # puerto **NO** expuesto al host

  frontend:
    build:
      context: ./frontend
    ports:
      - "80:80"                              # único punto de entrada
    depends_on:
      backend:
        condition: service_started           # o service_healthy si añades healthcheck
    volumes:
      - ./data/static:/static                # lee los estáticos de Django
    networks:
      - internet_access
      - internal_network
    restart: unless-stopped

  timescaledb:
    image: timescale/timescaledb-ha:pg16
    environment:
      POSTGRES_DB: tesis
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    volumes:
      - ./data/timescaledb_data:/var/lib/postgresql/data
      - ./postgres-init:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    networks:
      - internal_network
    restart: unless-stopped

networks:
  internal_network:
    driver: bridge
    internal: true
  internet_access:
    driver: bridge
